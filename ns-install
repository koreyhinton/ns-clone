#!/bin/bash

src="${BASH_SOURCE[0]}"
src_full=$(realpath "$src")
src_dir="${src_full%/*}"

dot_ns_script="${src_dir}/repos/dot-ns/ns"
dot_ns_dir=$(dirname "$dot_ns_script")

# ensure ns-clone.profile is sourced in .bashrc
if [[ ! -f "${HOME}/.bashrc" ]]; then
    touch "${HOME}/.bashrc"
fi
prof="${src_dir}/ns-clone.profile"
if grep -q "^\. ${prof}\$" "${HOME}/.bashrc"
then    :
else    echo ". ${prof}" >>"${HOME}/.bashrc"
fi

# if profile link is ensured, then ensure other installation components
if [[ $? -eq 0 ]];  then
    if [[ -z "$NS_CLONE_VERSION" ]]; then
        if ! command git 2>/dev/null; then
            echo "Installation failure: failed to install due to missing dependency (git)" 1>&2
            exit 1
        fi

        if ! command ns 2>/dev/null; then
            cd "${src_dir}/repos"
            if ! ../ns-clone https://github.com/koreyhinton/dot-ns.git; then
                echo "Installation failure: dot-ns dependency installation failed (script: ${src_dir}/ns-clone)" 1>&2
                exit 2
            fi
            cd ../
        fi

        # ns-clone of dot-ns should have added a PATH export for the dot-ns
        # repository directory

        # Alternative to:
        #     if command ns 2>/dev/null;
        # but since parent process (caller) has not sourced ns-clone.profile yet
        # we won't be able to find the command yet, so just check it would be
        # in the path when ns-clone.paths is sourced (next shell session).
        dot_paths="${src_dir}/ns-clone.paths"
        if [[ -x "$dot_ns_script" ]] && grep -q "^export PATH" "$dot_paths"
        then :
        else
            echo "Installation failure: failed to establish ns-clone dependencies (ns)" 1>&2
            exit 3
        fi

        if ! . "${prof}"; then
            echo "Installation failure: unexpected failure when sourcing login script: ${prof}" 1>&2
            exit 4
        fi

        # the dot profile run above will not apply to the parent/caller

        if [[ -z "$NS_CLONE_VERSION" ]]; then
            echo "Installation failure: the sourced login script appears to be configured but doesn't appear to have succeeded in running all the way through (script: ${prof})" 1>&2
            exit 5
        fi
    fi
else
    echo "Installation failure: the .bashrc config file had an unexpected failure on write (script: ${HOME}/.bashrc)" 1>&2
    exit 6
fi

if [[ ! -s "${src_dir}/ns-clone.paths" ]]; then
    # Alternative to:
    #     ns_script=$(which ns)
    # since parent process (caller) has not sourced ns-clone.profile yet    
    echo "export NS_PATH=\"${dot_ns_dir}/ns_bin\"" >>"${src_dir}/ns-clone.paths"
    if [[ $? -gt 0 ]]; then
        echo "Installation failure: unexpected failure when writing to the paths file (file: ${src_dir}/ns-clone.paths)" 1>&2
        exit 7
    fi
fi

echo "ns-clone version ${NS_CLONE_VERSION} installation confirmed."
